// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter should render correctly  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filter
    onChangeSearchBy={[MockFunction]}
    onClick={[MockFunction]}
    onFilterChange={[MockFunction]}
    searchBy="value"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="filter__title"
        >
          Find your movie
        </div>,
        <Input
          className="filter__input"
          enterClick={undefined}
          onChange={[MockFunction]}
        />,
        <div
          className="filter__action"
        >
          <SearchBy
            onChange={[MockFunction]}
            searchBy="value"
          />
          <Button
            className="filter__action__apply-btn"
            name="Search"
            onClick={undefined}
          />
        </div>,
      ],
      "className": "filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Find your movie",
          "className": "filter__title",
        },
        "ref": null,
        "rendered": "Find your movie",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "filter__input",
          "enterClick": undefined,
          "onChange": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": "Input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SearchBy
              onChange={[MockFunction]}
              searchBy="value"
            />,
            <Button
              className="filter__action__apply-btn"
              name="Search"
              onClick={undefined}
            />,
          ],
          "className": "filter__action",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [MockFunction],
              "searchBy": "value",
            },
            "ref": null,
            "rendered": null,
            "type": "SearchBy",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "filter__action__apply-btn",
              "name": "Search",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "Button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="filter__title"
          >
            Find your movie
          </div>,
          <Input
            className="filter__input"
            enterClick={undefined}
            onChange={[MockFunction]}
          />,
          <div
            className="filter__action"
          >
            <SearchBy
              onChange={[MockFunction]}
              searchBy="value"
            />
            <Button
              className="filter__action__apply-btn"
              name="Search"
              onClick={undefined}
            />
          </div>,
        ],
        "className": "filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Find your movie",
            "className": "filter__title",
          },
          "ref": null,
          "rendered": "Find your movie",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "filter__input",
            "enterClick": undefined,
            "onChange": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "Input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SearchBy
                onChange={[MockFunction]}
                searchBy="value"
              />,
              <Button
                className="filter__action__apply-btn"
                name="Search"
                onClick={undefined}
              />,
            ],
            "className": "filter__action",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [MockFunction],
                "searchBy": "value",
              },
              "ref": null,
              "rendered": null,
              "type": "SearchBy",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "filter__action__apply-btn",
                "name": "Search",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "Button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
