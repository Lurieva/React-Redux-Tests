// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieDetailsPage should render correctly  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieDetailsPage
    match={
      Object {
        "params": Object {
          "movieId": 2,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Header
          isShowSearchBtn={true}
        >
          <MovieDetails
            movie={Object {}}
          />
        </Header>,
        <InfoPanel>
          <GenresInfo
            genres={undefined}
          />
        </InfoPanel>,
        <Movies
          movies={Array []}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <MovieDetails
            movie={Object {}}
          />,
          "isShowSearchBtn": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "movie": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": "MovieDetails",
        },
        "type": "Header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <GenresInfo
            genres={undefined}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "genres": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "GenresInfo",
        },
        "type": "InfoPanel",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "movies": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": "Movies",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            isShowSearchBtn={true}
          >
            <MovieDetails
              movie={Object {}}
            />
          </Header>,
          <InfoPanel>
            <GenresInfo
              genres={undefined}
            />
          </InfoPanel>,
          <Movies
            movies={Array []}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <MovieDetails
              movie={Object {}}
            />,
            "isShowSearchBtn": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "movie": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": "MovieDetails",
          },
          "type": "Header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <GenresInfo
              genres={undefined}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "genres": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "GenresInfo",
          },
          "type": "InfoPanel",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "movies": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": "Movies",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
