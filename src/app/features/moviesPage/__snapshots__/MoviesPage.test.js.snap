// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MoviesPage should render correctly  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MoviesPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Header
          isShowSearchBtn={false}
        >
          <Filter
            filter=""
            onApplyFilter={[Function]}
            onChangeSearchBy={[Function]}
            onFilterChange={[Function]}
            searchBy="title"
          />
        </Header>,
        <InfoPanel>
          <MoviesInfoPanel
            count={0}
          >
            <SortBy
              onChangeSortBy={[Function]}
              sortBy="release_date"
            />
          </MoviesInfoPanel>
        </InfoPanel>,
        <Movies
          movies={Array []}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Filter
            filter=""
            onApplyFilter={[Function]}
            onChangeSearchBy={[Function]}
            onFilterChange={[Function]}
            searchBy="title"
          />,
          "isShowSearchBtn": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "filter": "",
            "onApplyFilter": [Function],
            "onChangeSearchBy": [Function],
            "onFilterChange": [Function],
            "searchBy": "title",
          },
          "ref": null,
          "rendered": null,
          "type": "Filter",
        },
        "type": "Header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <MoviesInfoPanel
            count={0}
          >
            <SortBy
              onChangeSortBy={[Function]}
              sortBy="release_date"
            />
          </MoviesInfoPanel>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SortBy
              onChangeSortBy={[Function]}
              sortBy="release_date"
            />,
            "count": 0,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChangeSortBy": [Function],
              "sortBy": "release_date",
            },
            "ref": null,
            "rendered": null,
            "type": "SortBy",
          },
          "type": "MoviesInfoPanel",
        },
        "type": "InfoPanel",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "movies": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": "Movies",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            isShowSearchBtn={false}
          >
            <Filter
              filter=""
              onApplyFilter={[Function]}
              onChangeSearchBy={[Function]}
              onFilterChange={[Function]}
              searchBy="title"
            />
          </Header>,
          <InfoPanel>
            <MoviesInfoPanel
              count={0}
            >
              <SortBy
                onChangeSortBy={[Function]}
                sortBy="release_date"
              />
            </MoviesInfoPanel>
          </InfoPanel>,
          <Movies
            movies={Array []}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Filter
              filter=""
              onApplyFilter={[Function]}
              onChangeSearchBy={[Function]}
              onFilterChange={[Function]}
              searchBy="title"
            />,
            "isShowSearchBtn": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "filter": "",
              "onApplyFilter": [Function],
              "onChangeSearchBy": [Function],
              "onFilterChange": [Function],
              "searchBy": "title",
            },
            "ref": null,
            "rendered": null,
            "type": "Filter",
          },
          "type": "Header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <MoviesInfoPanel
              count={0}
            >
              <SortBy
                onChangeSortBy={[Function]}
                sortBy="release_date"
              />
            </MoviesInfoPanel>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SortBy
                onChangeSortBy={[Function]}
                sortBy="release_date"
              />,
              "count": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChangeSortBy": [Function],
                "sortBy": "release_date",
              },
              "ref": null,
              "rendered": null,
              "type": "SortBy",
            },
            "type": "MoviesInfoPanel",
          },
          "type": "InfoPanel",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "movies": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": "Movies",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
